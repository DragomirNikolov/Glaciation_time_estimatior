#!/bin/bash
#SBATCH -J test_pyflextrkr
#SBATCH -t 04:00:00
#SBATCH -N 1
#SBATCH -n 24
#SBATCH -q debug
#SBATCH --mem-per-cpu=2048
#SBATCH --tmp=50240
#SBATCH --mail-type=END,FAIL
#SBATCH --output=/cluster/work/climate/dnikolo/Job_output/Output/%x.%j.out
#SBATCH --error=/cluster/work/climate/dnikolo/Job_output/Error/%x.%j.err


date

declare -i min_temp
declare -i max_temp

print_usage() {
    printf "Usage: ..."
}

while getopts 'h:l:p:c:' flag; do
    case "${flag}" in
    h) max_temp=${OPTARG#-} ;;
    l) min_temp=${OPTARG#-} ;;
    p) pole=${OPTARG} ;;
    c) GTE_CONFIG_DIR=${OPTARG} ;;
    *)
        print_usage
        exit 1
        ;;
    esac
done



#Copy files to local scratch
# export TMPDIR="/cluster/work/climate/dnikolo/dump"
GTE_DIR=/cluster/work/climate/dnikolo/n2o/Glaciation_time_estimator
ENV_BIN_DIR=/cluster/work/climate/dnikolo/flex_trkr_2/bin
RESULT_DIR="${TMPDIR}/Result"


echo "GTE_CONFIG_DIR is ${GTE_CONFIG_DIR}"
#Change variable to counteract a common error in PyFLEXTRKR
export HDF5_USE_FILE_LOCKING=FALSE
module load stack/2024-06 gcc/12.2.0 openmpi/4.1.6 nco ffmpeg/6.0 #python/3.11.6

#Load pyflextrkr python
source "${ENV_BIN_DIR}"/activate
cd $GTE_DIR/../ || exit

python -m Glaciation_time_estimator.Cloud_tracking.Copy_filtered_files  -t "$min_temp" "$max_temp" -p $pole -cf $GTE_CONFIG_DIR

# Generate setup file for the iteration in ${TMPDIR}/T-${MINTEMP}-${MAXTEMP}
python -m Glaciation_time_estimator.Cloud_tracking.Generate_config -t $min_temp $max_temp -bc "${GTE_DIR}/Cloud_tracking/custom_setup.yml" -cf $GTE_CONFIG_DIR

cd "$RESULT_DIR" || exit
# #Run PyFLEXTRKR
python /cluster/work/climate/dnikolo/n2o/PyFLEXTRKR/runscripts/run_generic_tracking.py ./setup.yml

cd $GTE_DIR/../ || exit
#Send results back to server
python -m Glaciation_time_estimator.Cloud_tracking.Send_results -cf $GTE_CONFIG_DIR -rd "${RESULT_DIR}/" -p "${pole}" -t $min_temp $max_temp
date